<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	  <mapper namespace="spring.mvc.spring_pj_ict05.dao.BoardDAO">  <!-- namespace="패키지명.인터페이스" -->
		<!-- 게시글 목록 -->
		<select id="boardList" parameterType="java.util.Map" resultType="spring.mvc.spring_pj_ict05.dto.BoardDTO">
			SELECT * 
			FROM 
			(
				SELECT A.*
					 , rownum AS rn
				  FROM 
				  (
					SELECT * 
					  FROM mvc_board_tbl
					 WHERE b_show = 'Y' 
					 ORDER BY B_NUM DESC
					) A 
			) 
			WHERE rn BETWEEN #{start} AND #{end}
		</select>
		
		<!-- 게시글 갯수구하기 -->
		<select id="boardCnt" resultType="int">
			SELECT count(*)
			  FROM mvc_board_tbl 
			 WHERE b_show='Y'
		</select>
		
		<!-- 조회수 증가 -->
		<update id="plusReadCnt" parameterType="int">
			UPDATE mvc_board_tbl 
			SET b_readcnt = b_readcnt + 1 
			WHERE b_num = #{board_num}
		</update>
		
		<!-- 게시글 상세 처리 -->
		<select id="getBoardDetail" parameterType="int" resultType="spring.mvc.spring_pj_ict05.dto.BoardDTO">
			SELECT * 
			  FROM mvc_board_tbl 
			 WHERE b_num = #{board_num}
		</select>
		
		<!-- 게시글 수정삭제 버튼 클릭시 - 비밀번호 인증처리 -->
		<select id="password_chk" parameterType="java.util.Map" resultType="int">
			SELECT count(*) AS cnt 
			FROM mvc_board_tbl  
			WHERE b_num = #{num} 
			AND b_password = #{password}
		</select>
		
		<!-- 게시글 수정처리 -->
		<update id="updateBoard" parameterType="spring.mvc.spring_pj_ict05.dto.BoardDTO">
			UPDATE mvc_board_tbl 
			   SET b_password = #{b_password} 
				 , b_title = #{b_title} 
				 , b_content = #{b_content} 
			 WHERE b_num = #{b_num} 
		</update>
		
		<!-- 게시글 삭제 처리 -->
		<update id="deleteBoard" parameterType="int">
			UPDATE mvc_board_tbl 
			   SET b_show = 'N' 
			 WHERE b_num = #{board_num} 
		</update>
		
		<!-- 게시글작성처리 -->
		<insert id="insertBoard" parameterType="spring.mvc.spring_pj_ict05.dto.BoardDTO">
			INSERT INTO mvc_board_tbl(b_num, b_title, b_content, b_writer, b_password, b_readcnt, b_regdate, b_comment_count)
			VALUES ((SELECT NVL(MAX(b_num)+1, 1) FROM mvc_board_tbl), #{b_title}, #{b_content}, #{b_writer}, #{b_password}, 0, sysdate, 0)
		</insert>
		
		<!-- 댓글 작성 처리 -->
		<insert id="insertComment" parameterType="spring.mvc.spring_pj_ict05.dto.BoardCommentDTO">
			INSERT INTO mvc_comment_tbl(c_comment_num, c_board_num, c_writer, c_content, c_regDate) 
      		VALUES((SELECT NVL(MAX(c_comment_num)+1, 1) FROM mvc_comment_tbl), #{c_board_num}, #{c_writer}, #{c_content}, sysdate)
		</insert>
		
		<!-- 댓글 갯수 업데이트 -->
	 	<update id="updateCommentCount">
		    UPDATE MVC_BOARD_TBL mbt 
			   SET b_comment_count = 
			    (SELECT COUNT(*)
			     FROM mvc_comment_tbl c
			 WHERE c.c_board_num = mbt.b_num)
		</update>
		
		<!-- 댓글목록 -->
		<select id="commentList" parameterType="int" resultType="spring.mvc.spring_pj_ict05.dto.BoardCommentDTO">
			SELECT *
			  FROM
				(SELECT A.* 
					  , rownum AS rn
				   FROM (SELECT * FROM mvc_comment_tbl c, mvc_board_tbl b 
						  WHERE b.B_NUM = c.c_board_num 
							AND b_num = #{board_num}
					   ORDER BY C_COMMENT_NUM DESC) A 
					)
				ORDER BY rn DESC
		</select>
		
		
	 </mapper>  
	 
	 
	 
	 